/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.bpl.pwsplugin;


import org.micromanager.internal.utils.MMFrame;
import org.micromanager.data.ProcessorConfigurator;
import org.micromanager.PropertyMap;
import org.micromanager.Studio;
import org.micromanager.LogManager;


public class PWSConfigurator extends MMFrame implements ProcessorConfigurator {

    private final Studio studio_;
    private PropertyMap settings_;
    private final LogManager log_;
    
    /**
     * Creates new form FrameAveragerControls
     */
    public PWSConfigurator(PropertyMap settings, Studio studio) {
        studio_ = studio;
        settings_ = settings;
        log_ = studio.logs();
        initComponents();
        super.loadAndRestorePosition(200, 200);
    }       
    
    @Override
    public PropertyMap getSettings() {
        PropertyMap.PropertyMapBuilder builder = studio_.data().getPropertyMapBuilder();
        try{
            builder.putInt("numAverages", Integer.parseInt(numFramesField.getText().trim()));
        }
        catch(NumberFormatException e){
            log_.showMessage("A valid number was not specified. Got: " + numFramesField.getText().trim());
        }
        return builder.build();
    }
        
    @Override
    public void cleanup() {
        dispose();
    }
    
    @Override
    public void showGUI() {
        pack();
        setVisible(true);
    }
    

    private void updateNumFramesField() {
        int num;
        String str = numFramesField.getText().trim().toString();
        try {
         num = (int) Integer.parseInt(str);
        } catch(NumberFormatException e) {
            log_.showMessage("A valid number was not specified. Defaulting to 4.");
            num = 4;
        }
        if (num < 2) {
            log_.showMessage("Can not average less than 2 frames. Defaulting to 4.");
            num = 4;
        }
        numFramesField.setText(Integer.toString(num));
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        numFramesField = new javax.swing.JTextField();

        jCheckBox1.setText("jCheckBox1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setAutoscrolls(true);
        jPanel1.setMinimumSize(new java.awt.Dimension(332, 142));
        jPanel1.setPreferredSize(new java.awt.Dimension(332, 142));
        jPanel1.setLayout(new java.awt.GridLayout(1, 2));

        jLabel1.setText("Averages");
        jPanel1.add(jLabel1);

        numFramesField.setText("4");
        numFramesField.setToolTipText("");
        numFramesField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                numFramesFieldFocusLost(evt);
            }
        });
        numFramesField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numFramesFieldActionPerformed(evt);
            }
        });
        jPanel1.add(numFramesField);
        numFramesField.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void numFramesFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numFramesFieldActionPerformed
        updateNumFramesField();
    }//GEN-LAST:event_numFramesFieldActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

    }//GEN-LAST:event_formWindowClosing

    private void numFramesFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_numFramesFieldFocusLost
        updateNumFramesField();
    }//GEN-LAST:event_numFramesFieldFocusLost

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField numFramesField;
    // End of variables declaration//GEN-END:variables
}
